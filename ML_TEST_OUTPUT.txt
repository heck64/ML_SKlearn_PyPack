Last login: Wed Jan 22 10:03:56 on ttys000
(base) chloehooper@Chloes-MacBook-Pro-2 ~ % python
Python 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import sklern
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ModuleNotFoundError: No module named 'sklern'
>>> import sklearn
>>> from sklearn import svm
>>> quit()
(base) chloehooper@Chloes-MacBook-Pro-2 ~ % cd Code/Masters_Project 
(base) chloehooper@Chloes-MacBook-Pro-2 Masters_Project % ls
2_Quad_0.01_180.root		DataSet1.txt
2_Quad_0.01_180.txt		KS.txt
2_Quad_0.01_225.root		ML_Sk_Learn_Tester.py
2_Quad_0.01_225.txt		ML_Tester.ipynb
2_Quad_0.01_270.root		Phase_Space_Vacuum.txt
2_Quad_0.01_270.txt		Phase_Space_Vacuum_2_Quad.txt
2_Quad_0.105_180.root		Phase_Space_Vacuum_3_Quad.txt
2_Quad_0.105_180.txt		Phase_Space_Vacuum_4_Quad.txt
2_Quad_0.105_225.root		Phase_Space_Vacuum_Pencil.txt
2_Quad_0.105_225.txt		Phase_Space_Vacuum_Quad.root
2_Quad_0.105_270.root		Phase_Space_Vacuum_Quad.txt
2_Quad_0.105_270.txt		ROOT_Loader.py
2_Quad_0.2_180.root		Root_Notebook.ipynb
2_Quad_0.2_180.txt		Run.py
2_Quad_0.2_225.root		TOPAS_File_Adapter.py
2_Quad_0.2_225.txt		Templates
2_Quad_0.2_270.root		Untitled1.ipynb
2_Quad_0.2_270.txt		__pycache__
2_Quad_TOPAS_Template.txt	please.root
AutoTOPASRunner_2_QUAD.py	root_v6.32.08
Cuts.png			template.txt
DataSet				test.png
DataSet.txt			topas.root
(base) chloehooper@Chloes-MacBook-Pro-2 Masters_Project % ipython
Python 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.15.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: import sklearn

In [2]: from sklearn import svm

In [3]: import n
---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
Cell In[3], line 1
----> 1 import n

ModuleNotFoundError: No module named 'n'

In [4]: import numpy as np

In [5]: x,y = np.genfromtxt("DataSet1.txt")
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
Cell In[5], line 1
----> 1 x,y = np.genfromtxt("DataSet1.txt")

ValueError: too many values to unpack (expected 2)

In [6]: x= np.genfromtxt("DataSet1.txt")

In [7]: x
Out[7]: 
array([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
       nan, nan, nan, nan, nan])

In [8]: x=[[0.9519230769230769, 0.875],[0.9423076923076923, 0.875],[0.9615384615
   ...: 384616, 0.9230769230769231],[0.9807692307692307, 0.9615384615384616],[0.
   ...: 9807692307692307, 0.9903846153846154],[1.0, 1.0],[0.9803921568627451, 0.
   ...: 9901960784313726],[0.898989898989899, 0.8585858585858586]]
   ...: y=[[2, 0.01, 180],[2, 0.01, 225],[2, 0.105, 180],[2, 0.105, 225],[2, 0.1
   ...: 05, 270],[2, 0.2, 180],[2, 0.2, 225],[2, 0.2, 270]]
   ...: 

In [9]: regr = svm.SVR()
   ...: regr.fit(x, y)

---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
Cell In[9], line 2
      1 regr = svm.SVR()
----> 2 regr.fit(x, y)

File ~/anaconda3/lib/python3.11/site-packages/sklearn/base.py:1151, in _fit_context.<locals>.decorator.<locals>.wrapper(estimator, *args, **kwargs)
   1144     estimator._validate_params()
   1146 with config_context(
   1147     skip_parameter_validation=(
   1148         prefer_skip_nested_validation or global_skip_validation
   1149     )
   1150 ):
-> 1151     return fit_method(estimator, *args, **kwargs)

File ~/anaconda3/lib/python3.11/site-packages/sklearn/svm/_base.py:190, in BaseLibSVM.fit(self, X, y, sample_weight)
    188     check_consistent_length(X, y)
    189 else:
--> 190     X, y = self._validate_data(
    191         X,
    192         y,
    193         dtype=np.float64,
    194         order="C",
    195         accept_sparse="csr",
    196         accept_large_sparse=False,
    197     )
    199 y = self._validate_targets(y)
    201 sample_weight = np.asarray(
    202     [] if sample_weight is None else sample_weight, dtype=np.float64
    203 )

File ~/anaconda3/lib/python3.11/site-packages/sklearn/base.py:621, in BaseEstimator._validate_data(self, X, y, reset, validate_separately, cast_to_ndarray, **check_params)
    619         y = check_array(y, input_name="y", **check_y_params)
    620     else:
--> 621         X, y = check_X_y(X, y, **check_params)
    622     out = X, y
    624 if not no_val_X and check_params.get("ensure_2d", True):

File ~/anaconda3/lib/python3.11/site-packages/sklearn/utils/validation.py:1163, in check_X_y(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)
   1143     raise ValueError(
   1144         f"{estimator_name} requires y to be passed, but the target y is None"
   1145     )
   1147 X = check_array(
   1148     X,
   1149     accept_sparse=accept_sparse,
   (...)
   1160     input_name="X",
   1161 )
-> 1163 y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
   1165 check_consistent_length(X, y)
   1167 return X, y

File ~/anaconda3/lib/python3.11/site-packages/sklearn/utils/validation.py:1184, in _check_y(y, multi_output, y_numeric, estimator)
   1182 else:
   1183     estimator_name = _check_estimator_name(estimator)
-> 1184     y = column_or_1d(y, warn=True)
   1185     _assert_all_finite(y, input_name="y", estimator_name=estimator_name)
   1186     _ensure_no_complex_data(y)

File ~/anaconda3/lib/python3.11/site-packages/sklearn/utils/validation.py:1245, in column_or_1d(y, dtype, warn)
   1234         warnings.warn(
   1235             (
   1236                 "A column-vector y was passed when a 1d array was"
   (...)
   1241             stacklevel=2,
   1242         )
   1243     return _asarray_with_order(xp.reshape(y, (-1,)), order="C", xp=xp)
-> 1245 raise ValueError(
   1246     "y should be a 1d array, got an array of shape {} instead.".format(shape)
   1247 )

ValueError: y should be a 1d array, got an array of shape (8, 3) instead.

In [10]: 

In [10]: regr = MultiOutputRegressor(Ridge(random_state=123))
    ...: 
    ...: regr.fit(x, y)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Cell In[10], line 1
----> 1 regr = MultiOutputRegressor(Ridge(random_state=123))
      3 regr.fit(x, y)

NameError: name 'MultiOutputRegressor' is not defined

In [11]: from sklearn.multioutput import MultiOutputRegressor

In [12]: regr = MultiOutputRegressor(Ridge(random_state=123))
    ...: 
    ...: regr.fit(x, y)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Cell In[12], line 1
----> 1 regr = MultiOutputRegressor(Ridge(random_state=123))
      3 regr.fit(x, y)

NameError: name 'Ridge' is not defined

In [13]: from sklearn.linear_model import Ridge

In [14]: regr = MultiOutputRegressor(Ridge(random_state=123))
    ...: 
    ...: regr.fit(x, y)
Out[14]: MultiOutputRegressor(estimator=Ridge(random_state=123))

In [15]: regr.predict(X[[0]])
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Cell In[15], line 1
----> 1 regr.predict(X[[0]])

NameError: name 'X' is not defined

In [16]: regr.predict(x[[0]])
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In[16], line 1
----> 1 regr.predict(x[[0]])

TypeError: list indices must be integers or slices, not list

In [17]: regr.predict(x)
Out[17]: 
array([[2.00000000e+00, 1.15952075e-01, 2.19444035e+02],
       [2.00000000e+00, 1.15932844e-01, 2.19474740e+02],
       [2.00000000e+00, 1.16704034e-01, 2.19383634e+02],
       [2.00000000e+00, 1.17328678e-01, 2.19298466e+02],
       [2.00000000e+00, 1.17768315e-01, 2.19280649e+02],
       [2.00000000e+00, 1.17953323e-01, 2.19213299e+02],
       [2.00000000e+00, 1.17764687e-01, 2.19281970e+02],
       [2.00000000e+00, 1.15596043e-01, 2.19623208e+02]])

In [18]: regr.score()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In[18], line 1
----> 1 regr.score()

TypeError: RegressorMixin.score() missing 2 required positional arguments: 'X' and 'y'

In [19]: regr.score(x,y)
Out[19]: 0.3376804735409668

In [20]: 
